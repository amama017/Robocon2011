;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 16-Jul-11 2:09:55 PM
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2C19			GOTO	_main
$0004	$	_Init_PWM:
;Project_Rob.c,170 :: 		void Init_PWM()
;Project_Rob.c,175 :: 		PR2 = 0b00111111;
$0004	$303F			MOVLW	63
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$0092			MOVWF	PR2
;Project_Rob.c,177 :: 		T2CON = 0b00000100;
$0008	$3004			MOVLW	4
$0009	$1283			BCF	STATUS, RP0
$000A	$0092			MOVWF	T2CON
;Project_Rob.c,180 :: 		PIE1 = 0;
$000B	$1683			BSF	STATUS, RP0
$000C	$018C			CLRF	PIE1, 1
;Project_Rob.c,181 :: 		PIR1 = 0;
$000D	$1283			BCF	STATUS, RP0
$000E	$018C			CLRF	PIR1, 1
;Project_Rob.c,182 :: 		PIE2 = 0;
$000F	$1683			BSF	STATUS, RP0
$0010	$018D			CLRF	PIE2, 1
;Project_Rob.c,183 :: 		PIR2 = 0;
$0011	$1283			BCF	STATUS, RP0
$0012	$018D			CLRF	PIR2, 1
;Project_Rob.c,185 :: 		PIE1.TMR1IE = 1;        // Enable Timer 1 interrupts
$0013	$1683			BSF	STATUS, RP0
$0014	$140C			BSF	PIE1, 0
;Project_Rob.c,186 :: 		delay_ms(100);
$0015	$3082			MOVLW	130
$0016	$00FB			MOVWF	STACK_11
$0017	$30FF			MOVLW	255
$0018	$00FA			MOVWF	STACK_10
$0019	$0BFB			DECFSZ	STACK_11, F
$001A	$281C			GOTO	$+2
$001B	$281F			GOTO	$+4
$001C	$0BFA			DECFSZ	STACK_10, F
$001D	$281C			GOTO	$-1
$001E	$2819			GOTO	$-5
$001F	$3087			MOVLW	135
$0020	$00FA			MOVWF	STACK_10
$0021	$0BFA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
$0023	$0000			NOP
;Project_Rob.c,187 :: 		}
$0024	$0008			RETURN
$0025	$	_Reset_PWM:
;Project_Rob.c,189 :: 		void Reset_PWM()
;Project_Rob.c,194 :: 		T2CON = 0;
$0025	$1303			BCF	STATUS, RP1
$0026	$1283			BCF	STATUS, RP0
$0027	$0192			CLRF	T2CON, 1
;Project_Rob.c,196 :: 		TMR2 = 0;
$0028	$0191			CLRF	TMR2, 1
;Project_Rob.c,198 :: 		delay_ms(100);
$0029	$3082			MOVLW	130
$002A	$00FB			MOVWF	STACK_11
$002B	$30FF			MOVLW	255
$002C	$00FA			MOVWF	STACK_10
$002D	$0BFB			DECFSZ	STACK_11, F
$002E	$2830			GOTO	$+2
$002F	$2833			GOTO	$+4
$0030	$0BFA			DECFSZ	STACK_10, F
$0031	$2830			GOTO	$-1
$0032	$282D			GOTO	$-5
$0033	$3087			MOVLW	135
$0034	$00FA			MOVWF	STACK_10
$0035	$0BFA			DECFSZ	STACK_10, F
$0036	$2835			GOTO	$-1
$0037	$0000			NOP
;Project_Rob.c,199 :: 		Init_PWM();
$0038	$2004			CALL	_Init_PWM
;Project_Rob.c,201 :: 		}
$0039	$0008			RETURN
$003A	$	_PWM_C1:
;Project_Rob.c,86 :: 		void PWM_C1(const unsigned short duty_Percent)
;Project_Rob.c,91 :: 		if(duty_Percent == 100)
$003A	$1303			BCF	STATUS, RP1
$003B	$1283			BCF	STATUS, RP0
$003C	$0822			MOVF	FARG_PWM_C1+0, 0
$003D	$3A64			XORLW	100
$003E	$1D03			BTFSS	STATUS, Z
$003F	$2845			GOTO	L_PWM_C1_0
;Project_Rob.c,93 :: 		CCPR2L = 0b00111111;
$0040	$303F			MOVLW	63
$0041	$009B			MOVWF	CCPR2L
;Project_Rob.c,95 :: 		CCP2CON = 0b00111100;
$0042	$303C			MOVLW	60
$0043	$009D			MOVWF	CCP2CON
;Project_Rob.c,97 :: 		}
$0044	$2863			GOTO	L_PWM_C1_1
$0045	$	L_PWM_C1_0:
;Project_Rob.c,98 :: 		else if(duty_Percent == 75)
$0045	$0822			MOVF	FARG_PWM_C1+0, 0
$0046	$3A4B			XORLW	75
$0047	$1D03			BTFSS	STATUS, Z
$0048	$284E			GOTO	L_PWM_C1_2
;Project_Rob.c,100 :: 		CCPR2L = 0b00101111;
$0049	$302F			MOVLW	47
$004A	$009B			MOVWF	CCPR2L
;Project_Rob.c,102 :: 		CCP2CON = 0b00111100;
$004B	$303C			MOVLW	60
$004C	$009D			MOVWF	CCP2CON
;Project_Rob.c,104 :: 		}
$004D	$2863			GOTO	L_PWM_C1_3
$004E	$	L_PWM_C1_2:
;Project_Rob.c,105 :: 		else if(duty_Percent == 50)
$004E	$0822			MOVF	FARG_PWM_C1+0, 0
$004F	$3A32			XORLW	50
$0050	$1D03			BTFSS	STATUS, Z
$0051	$2857			GOTO	L_PWM_C1_4
;Project_Rob.c,107 :: 		CCPR2L = 0b00011111;
$0052	$301F			MOVLW	31
$0053	$009B			MOVWF	CCPR2L
;Project_Rob.c,109 :: 		CCP2CON = 0b00111100;
$0054	$303C			MOVLW	60
$0055	$009D			MOVWF	CCP2CON
;Project_Rob.c,111 :: 		}
$0056	$2863			GOTO	L_PWM_C1_5
$0057	$	L_PWM_C1_4:
;Project_Rob.c,112 :: 		else if(duty_Percent == 25)
$0057	$0822			MOVF	FARG_PWM_C1+0, 0
$0058	$3A19			XORLW	25
$0059	$1D03			BTFSS	STATUS, Z
$005A	$2860			GOTO	L_PWM_C1_6
;Project_Rob.c,114 :: 		CCPR2L = 0b00001111;
$005B	$300F			MOVLW	15
$005C	$009B			MOVWF	CCPR2L
;Project_Rob.c,116 :: 		CCP2CON = 0b00111100;
$005D	$303C			MOVLW	60
$005E	$009D			MOVWF	CCP2CON
;Project_Rob.c,118 :: 		}
$005F	$2863			GOTO	L_PWM_C1_7
$0060	$	L_PWM_C1_6:
;Project_Rob.c,121 :: 		CCPR2L = 0b00000000;
$0060	$019B			CLRF	CCPR2L, 1
;Project_Rob.c,123 :: 		CCP2CON = 0b00001100;
$0061	$300C			MOVLW	12
$0062	$009D			MOVWF	CCP2CON
;Project_Rob.c,125 :: 		}
$0063	$	L_PWM_C1_7:
$0063	$	L_PWM_C1_5:
$0063	$	L_PWM_C1_3:
$0063	$	L_PWM_C1_1:
;Project_Rob.c,126 :: 		}
$0063	$0008			RETURN
$0064	$	_PWM_C2:
;Project_Rob.c,128 :: 		void PWM_C2(const unsigned short duty_Percent)
;Project_Rob.c,133 :: 		if(duty_Percent == 100)
$0064	$1303			BCF	STATUS, RP1
$0065	$1283			BCF	STATUS, RP0
$0066	$0822			MOVF	FARG_PWM_C2+0, 0
$0067	$3A64			XORLW	100
$0068	$1D03			BTFSS	STATUS, Z
$0069	$286F			GOTO	L_PWM_C2_8
;Project_Rob.c,135 :: 		CCPR1L = 0b00111111;
$006A	$303F			MOVLW	63
$006B	$0095			MOVWF	CCPR1L
;Project_Rob.c,137 :: 		CCP1CON = 0b00111100;
$006C	$303C			MOVLW	60
$006D	$0097			MOVWF	CCP1CON
;Project_Rob.c,139 :: 		}
$006E	$288D			GOTO	L_PWM_C2_9
$006F	$	L_PWM_C2_8:
;Project_Rob.c,140 :: 		else if(duty_Percent == 75)
$006F	$0822			MOVF	FARG_PWM_C2+0, 0
$0070	$3A4B			XORLW	75
$0071	$1D03			BTFSS	STATUS, Z
$0072	$2878			GOTO	L_PWM_C2_10
;Project_Rob.c,142 :: 		CCPR1L = 0b00101111;
$0073	$302F			MOVLW	47
$0074	$0095			MOVWF	CCPR1L
;Project_Rob.c,144 :: 		CCP1CON = 0b00111100;
$0075	$303C			MOVLW	60
$0076	$0097			MOVWF	CCP1CON
;Project_Rob.c,146 :: 		}
$0077	$288D			GOTO	L_PWM_C2_11
$0078	$	L_PWM_C2_10:
;Project_Rob.c,147 :: 		else if(duty_Percent == 50)
$0078	$0822			MOVF	FARG_PWM_C2+0, 0
$0079	$3A32			XORLW	50
$007A	$1D03			BTFSS	STATUS, Z
$007B	$2881			GOTO	L_PWM_C2_12
;Project_Rob.c,149 :: 		CCPR1L = 0b00011111;
$007C	$301F			MOVLW	31
$007D	$0095			MOVWF	CCPR1L
;Project_Rob.c,151 :: 		CCP1CON = 0b00111100;
$007E	$303C			MOVLW	60
$007F	$0097			MOVWF	CCP1CON
;Project_Rob.c,153 :: 		}
$0080	$288D			GOTO	L_PWM_C2_13
$0081	$	L_PWM_C2_12:
;Project_Rob.c,154 :: 		else if(duty_Percent == 25)
$0081	$0822			MOVF	FARG_PWM_C2+0, 0
$0082	$3A19			XORLW	25
$0083	$1D03			BTFSS	STATUS, Z
$0084	$288A			GOTO	L_PWM_C2_14
;Project_Rob.c,156 :: 		CCPR1L = 0b00001111;
$0085	$300F			MOVLW	15
$0086	$0095			MOVWF	CCPR1L
;Project_Rob.c,158 :: 		CCP1CON = 0b00111100;
$0087	$303C			MOVLW	60
$0088	$0097			MOVWF	CCP1CON
;Project_Rob.c,160 :: 		}
$0089	$288D			GOTO	L_PWM_C2_15
$008A	$	L_PWM_C2_14:
;Project_Rob.c,163 :: 		CCPR1L = 0b00000000;
$008A	$0195			CLRF	CCPR1L, 1
;Project_Rob.c,165 :: 		CCP1CON = 0b00001100;
$008B	$300C			MOVLW	12
$008C	$0097			MOVWF	CCP1CON
;Project_Rob.c,167 :: 		}
$008D	$	L_PWM_C2_15:
$008D	$	L_PWM_C2_13:
$008D	$	L_PWM_C2_11:
$008D	$	L_PWM_C2_9:
;Project_Rob.c,168 :: 		}
$008D	$0008			RETURN
$008E	$	_Init_Main:
;Project_Rob.c,544 :: 		void Init_Main()
;Project_Rob.c,549 :: 		delay_ms(200);
$008E	$3002			MOVLW	2
$008F	$1303			BCF	STATUS, RP1
$0090	$1283			BCF	STATUS, RP0
$0091	$00FC			MOVWF	STACK_12
$0092	$30FF			MOVLW	255
$0093	$00FB			MOVWF	STACK_11
$0094	$30FF			MOVLW	255
$0095	$00FA			MOVWF	STACK_10
$0096	$0BFC			DECFSZ	STACK_12, F
$0097	$2899			GOTO	$+2
$0098	$28A0			GOTO	$+8
$0099	$0BFB			DECFSZ	STACK_11, F
$009A	$289C			GOTO	$+2
$009B	$289F			GOTO	$+4
$009C	$0BFA			DECFSZ	STACK_10, F
$009D	$289C			GOTO	$-1
$009E	$2899			GOTO	$-5
$009F	$2896			GOTO	$-9
$00A0	$3006			MOVLW	6
$00A1	$00FB			MOVWF	STACK_11
$00A2	$30FF			MOVLW	255
$00A3	$00FA			MOVWF	STACK_10
$00A4	$0BFB			DECFSZ	STACK_11, F
$00A5	$28A7			GOTO	$+2
$00A6	$28AA			GOTO	$+4
$00A7	$0BFA			DECFSZ	STACK_10, F
$00A8	$28A7			GOTO	$-1
$00A9	$28A4			GOTO	$-5
$00AA	$300A			MOVLW	10
$00AB	$00FA			MOVWF	STACK_10
$00AC	$0BFA			DECFSZ	STACK_10, F
$00AD	$28AC			GOTO	$-1
;Project_Rob.c,550 :: 		TRISB=0xff;		//PortB is used as input port from the sensors
$00AE	$30FF			MOVLW	255
$00AF	$1683			BSF	STATUS, RP0
$00B0	$0086			MOVWF	TRISB
;Project_Rob.c,553 :: 		TRISC=0x00;		//PortC is used as the output signal for the Motors
$00B1	$0187			CLRF	TRISC, 1
;Project_Rob.c,557 :: 		Left_Motor_Nve = 0;
$00B2	$1283			BCF	STATUS, RP0
$00B3	$1007			BCF	PORTC, 0
;Project_Rob.c,558 :: 		Right_Motor_Nve = 0;
$00B4	$1187			BCF	PORTC, 3
;Project_Rob.c,559 :: 		Left_Motor_Pve = 0;
$00B5	$1087			BCF	PORTC, 1
;Project_Rob.c,560 :: 		Right_Motor_Pve = 0;
$00B6	$1107			BCF	PORTC, 2
;Project_Rob.c,562 :: 		Init_PWM();
$00B7	$2004			CALL	_Init_PWM
;Project_Rob.c,563 :: 		delay_ms(200);
$00B8	$3002			MOVLW	2
$00B9	$00FC			MOVWF	STACK_12
$00BA	$30FF			MOVLW	255
$00BB	$00FB			MOVWF	STACK_11
$00BC	$30FF			MOVLW	255
$00BD	$00FA			MOVWF	STACK_10
$00BE	$0BFC			DECFSZ	STACK_12, F
$00BF	$28C1			GOTO	$+2
$00C0	$28C8			GOTO	$+8
$00C1	$0BFB			DECFSZ	STACK_11, F
$00C2	$28C4			GOTO	$+2
$00C3	$28C7			GOTO	$+4
$00C4	$0BFA			DECFSZ	STACK_10, F
$00C5	$28C4			GOTO	$-1
$00C6	$28C1			GOTO	$-5
$00C7	$28BE			GOTO	$-9
$00C8	$3006			MOVLW	6
$00C9	$00FB			MOVWF	STACK_11
$00CA	$30FF			MOVLW	255
$00CB	$00FA			MOVWF	STACK_10
$00CC	$0BFB			DECFSZ	STACK_11, F
$00CD	$28CF			GOTO	$+2
$00CE	$28D2			GOTO	$+4
$00CF	$0BFA			DECFSZ	STACK_10, F
$00D0	$28CF			GOTO	$-1
$00D1	$28CC			GOTO	$-5
$00D2	$300A			MOVLW	10
$00D3	$00FA			MOVWF	STACK_10
$00D4	$0BFA			DECFSZ	STACK_10, F
$00D5	$28D4			GOTO	$-1
;Project_Rob.c,564 :: 		}
$00D6	$0008			RETURN
$00D7	$	_Track_Line_forward:
;Project_Rob.c,205 :: 		void Track_Line_forward(const unsigned short Lines)
;Project_Rob.c,215 :: 		unsigned short r_Lines = 0;
$00D7	$1303			BCF	STATUS, RP1
$00D8	$1283			BCF	STATUS, RP0
$00D9	$01A1			CLRF	Track_Line_forward_r_Lines_L0, 1
;Project_Rob.c,216 :: 		while(r_Lines < Lines)
$00DA	$	L_Track_Line_forward_16:
$00DA	$0820			MOVF	FARG_Track_Line_forward+0, 0
$00DB	$0221			SUBWF	Track_Line_forward_r_Lines_L0, 0
$00DC	$1803			BTFSC	STATUS, C
$00DD	$2AC8			GOTO	L_Track_Line_forward_17
;Project_Rob.c,218 :: 		Reset_PWM();
$00DE	$2025			CALL	_Reset_PWM
;Project_Rob.c,222 :: 		if(Left_Sensor == 0 && Mid_Sensor == 0 && Right_Sensor == 0)
$00DF	$3000			MOVLW	0
$00E0	$1283			BCF	STATUS, RP0
$00E1	$1886			BTFSC	PORTB, 1
$00E2	$3001			MOVLW	1
$00E3	$00F1			MOVWF	STACK_1
$00E4	$0871			MOVF	STACK_1, 0
$00E5	$3A00			XORLW	0
$00E6	$1D03			BTFSS	STATUS, Z
$00E7	$2938			GOTO	L_Track_Line_forward_20
$00E8	$3000			MOVLW	0
$00E9	$1906			BTFSC	PORTB, 2
$00EA	$3001			MOVLW	1
$00EB	$00F1			MOVWF	STACK_1
$00EC	$0871			MOVF	STACK_1, 0
$00ED	$3A00			XORLW	0
$00EE	$1D03			BTFSS	STATUS, Z
$00EF	$2938			GOTO	L_Track_Line_forward_20
$00F0	$3000			MOVLW	0
$00F1	$1986			BTFSC	PORTB, 3
$00F2	$3001			MOVLW	1
$00F3	$00F1			MOVWF	STACK_1
$00F4	$0871			MOVF	STACK_1, 0
$00F5	$3A00			XORLW	0
$00F6	$1D03			BTFSS	STATUS, Z
$00F7	$2938			GOTO	L_Track_Line_forward_20
$00F8	$	L129_ex_L_Track_Line_forward_20:
;Project_Rob.c,224 :: 		delay_ms(50);
$00F8	$3041			MOVLW	65
$00F9	$00FB			MOVWF	STACK_11
$00FA	$30FF			MOVLW	255
$00FB	$00FA			MOVWF	STACK_10
$00FC	$0BFB			DECFSZ	STACK_11, F
$00FD	$28FF			GOTO	$+2
$00FE	$2902			GOTO	$+4
$00FF	$0BFA			DECFSZ	STACK_10, F
$0100	$28FF			GOTO	$-1
$0101	$28FC			GOTO	$-5
$0102	$30C3			MOVLW	195
$0103	$00FA			MOVWF	STACK_10
$0104	$0BFA			DECFSZ	STACK_10, F
$0105	$2904			GOTO	$-1
$0106	$0000			NOP
;Project_Rob.c,226 :: 		Left_Motor_Nve = 1;
$0107	$1407			BSF	PORTC, 0
;Project_Rob.c,227 :: 		PWM_C1(50);
$0108	$3032			MOVLW	50
$0109	$00A2			MOVWF	FARG_PWM_C1+0
$010A	$203A			CALL	_PWM_C1
;Project_Rob.c,229 :: 		Right_Motor_Nve = 1;
$010B	$1587			BSF	PORTC, 3
;Project_Rob.c,230 :: 		PWM_C2(50);
$010C	$3032			MOVLW	50
$010D	$00A2			MOVWF	FARG_PWM_C2+0
$010E	$2064			CALL	_PWM_C2
;Project_Rob.c,232 :: 		delay_ms(100);
$010F	$3082			MOVLW	130
$0110	$00FB			MOVWF	STACK_11
$0111	$30FF			MOVLW	255
$0112	$00FA			MOVWF	STACK_10
$0113	$0BFB			DECFSZ	STACK_11, F
$0114	$2916			GOTO	$+2
$0115	$2919			GOTO	$+4
$0116	$0BFA			DECFSZ	STACK_10, F
$0117	$2916			GOTO	$-1
$0118	$2913			GOTO	$-5
$0119	$3087			MOVLW	135
$011A	$00FA			MOVWF	STACK_10
$011B	$0BFA			DECFSZ	STACK_10, F
$011C	$291B			GOTO	$-1
$011D	$0000			NOP
;Project_Rob.c,233 :: 		while(Left_Sensor == 0 && Mid_Sensor == 0 && Right_Sensor == 0)
$011E	$	L_Track_Line_forward_21:
$011E	$3000			MOVLW	0
$011F	$1886			BTFSC	PORTB, 1
$0120	$3001			MOVLW	1
$0121	$00F1			MOVWF	STACK_1
$0122	$0871			MOVF	STACK_1, 0
$0123	$3A00			XORLW	0
$0124	$1D03			BTFSS	STATUS, Z
$0125	$2937			GOTO	L_Track_Line_forward_22
$0126	$3000			MOVLW	0
$0127	$1906			BTFSC	PORTB, 2
$0128	$3001			MOVLW	1
$0129	$00F1			MOVWF	STACK_1
$012A	$0871			MOVF	STACK_1, 0
$012B	$3A00			XORLW	0
$012C	$1D03			BTFSS	STATUS, Z
$012D	$2937			GOTO	L_Track_Line_forward_22
$012E	$3000			MOVLW	0
$012F	$1986			BTFSC	PORTB, 3
$0130	$3001			MOVLW	1
$0131	$00F1			MOVWF	STACK_1
$0132	$0871			MOVF	STACK_1, 0
$0133	$3A00			XORLW	0
$0134	$1D03			BTFSS	STATUS, Z
$0135	$2937			GOTO	L_Track_Line_forward_22
$0136	$	L191_ex_L_Track_Line_forward_22:
;Project_Rob.c,235 :: 		}
$0136	$291E			GOTO	L_Track_Line_forward_21
$0137	$	L_Track_Line_forward_22:
;Project_Rob.c,236 :: 		}
$0137	$2AC7			GOTO	L_Track_Line_forward_25
$0138	$	L_Track_Line_forward_20:
;Project_Rob.c,240 :: 		else if(Mid_Sensor == 1)
$0138	$3000			MOVLW	0
$0139	$1906			BTFSC	PORTB, 2
$013A	$3001			MOVLW	1
$013B	$00F1			MOVWF	STACK_1
$013C	$0871			MOVF	STACK_1, 0
$013D	$3A01			XORLW	1
$013E	$1D03			BTFSS	STATUS, Z
$013F	$296F			GOTO	L_Track_Line_forward_26
;Project_Rob.c,242 :: 		delay_ms(50);
$0140	$3041			MOVLW	65
$0141	$00FB			MOVWF	STACK_11
$0142	$30FF			MOVLW	255
$0143	$00FA			MOVWF	STACK_10
$0144	$0BFB			DECFSZ	STACK_11, F
$0145	$2947			GOTO	$+2
$0146	$294A			GOTO	$+4
$0147	$0BFA			DECFSZ	STACK_10, F
$0148	$2947			GOTO	$-1
$0149	$2944			GOTO	$-5
$014A	$30C3			MOVLW	195
$014B	$00FA			MOVWF	STACK_10
$014C	$0BFA			DECFSZ	STACK_10, F
$014D	$294C			GOTO	$-1
$014E	$0000			NOP
;Project_Rob.c,244 :: 		Left_Motor_Nve = 0;
$014F	$1007			BCF	PORTC, 0
;Project_Rob.c,245 :: 		PWM_C1(100);
$0150	$3064			MOVLW	100
$0151	$00A2			MOVWF	FARG_PWM_C1+0
$0152	$203A			CALL	_PWM_C1
;Project_Rob.c,247 :: 		Right_Motor_Nve = 0;
$0153	$1187			BCF	PORTC, 3
;Project_Rob.c,248 :: 		PWM_C2(100);
$0154	$3064			MOVLW	100
$0155	$00A2			MOVWF	FARG_PWM_C2+0
$0156	$2064			CALL	_PWM_C2
;Project_Rob.c,250 :: 		delay_ms(100);
$0157	$3082			MOVLW	130
$0158	$00FB			MOVWF	STACK_11
$0159	$30FF			MOVLW	255
$015A	$00FA			MOVWF	STACK_10
$015B	$0BFB			DECFSZ	STACK_11, F
$015C	$295E			GOTO	$+2
$015D	$2961			GOTO	$+4
$015E	$0BFA			DECFSZ	STACK_10, F
$015F	$295E			GOTO	$-1
$0160	$295B			GOTO	$-5
$0161	$3087			MOVLW	135
$0162	$00FA			MOVWF	STACK_10
$0163	$0BFA			DECFSZ	STACK_10, F
$0164	$2963			GOTO	$-1
$0165	$0000			NOP
;Project_Rob.c,251 :: 		while(Mid_Sensor == 1)
$0166	$	L_Track_Line_forward_27:
$0166	$3000			MOVLW	0
$0167	$1906			BTFSC	PORTB, 2
$0168	$3001			MOVLW	1
$0169	$00F1			MOVWF	STACK_1
$016A	$0871			MOVF	STACK_1, 0
$016B	$3A01			XORLW	1
$016C	$1903			BTFSC	STATUS, Z
$016D	$2966			GOTO	L_Track_Line_forward_27
;Project_Rob.c,253 :: 		}
$016E	$	L_Track_Line_forward_28:
;Project_Rob.c,254 :: 		}
$016E	$2AC7			GOTO	L_Track_Line_forward_29
$016F	$	L_Track_Line_forward_26:
;Project_Rob.c,258 :: 		else if(Left_Sensor == 1 && Mid_Sensor == 0 && Right_Sensor == 0)
$016F	$3000			MOVLW	0
$0170	$1886			BTFSC	PORTB, 1
$0171	$3001			MOVLW	1
$0172	$00F1			MOVWF	STACK_1
$0173	$0871			MOVF	STACK_1, 0
$0174	$3A01			XORLW	1
$0175	$1D03			BTFSS	STATUS, Z
$0176	$29C7			GOTO	L_Track_Line_forward_32
$0177	$3000			MOVLW	0
$0178	$1906			BTFSC	PORTB, 2
$0179	$3001			MOVLW	1
$017A	$00F1			MOVWF	STACK_1
$017B	$0871			MOVF	STACK_1, 0
$017C	$3A00			XORLW	0
$017D	$1D03			BTFSS	STATUS, Z
$017E	$29C7			GOTO	L_Track_Line_forward_32
$017F	$3000			MOVLW	0
$0180	$1986			BTFSC	PORTB, 3
$0181	$3001			MOVLW	1
$0182	$00F1			MOVWF	STACK_1
$0183	$0871			MOVF	STACK_1, 0
$0184	$3A00			XORLW	0
$0185	$1D03			BTFSS	STATUS, Z
$0186	$29C7			GOTO	L_Track_Line_forward_32
$0187	$	L273_ex_L_Track_Line_forward_32:
;Project_Rob.c,260 :: 		delay_ms(50);
$0187	$3041			MOVLW	65
$0188	$00FB			MOVWF	STACK_11
$0189	$30FF			MOVLW	255
$018A	$00FA			MOVWF	STACK_10
$018B	$0BFB			DECFSZ	STACK_11, F
$018C	$298E			GOTO	$+2
$018D	$2991			GOTO	$+4
$018E	$0BFA			DECFSZ	STACK_10, F
$018F	$298E			GOTO	$-1
$0190	$298B			GOTO	$-5
$0191	$30C3			MOVLW	195
$0192	$00FA			MOVWF	STACK_10
$0193	$0BFA			DECFSZ	STACK_10, F
$0194	$2993			GOTO	$-1
$0195	$0000			NOP
;Project_Rob.c,262 :: 		Left_Motor_Nve = 0;
$0196	$1007			BCF	PORTC, 0
;Project_Rob.c,263 :: 		PWM_C1(50);
$0197	$3032			MOVLW	50
$0198	$00A2			MOVWF	FARG_PWM_C1+0
$0199	$203A			CALL	_PWM_C1
;Project_Rob.c,265 :: 		Right_Motor_Nve = 0;
$019A	$1187			BCF	PORTC, 3
;Project_Rob.c,266 :: 		PWM_C2(100);
$019B	$3064			MOVLW	100
$019C	$00A2			MOVWF	FARG_PWM_C2+0
$019D	$2064			CALL	_PWM_C2
;Project_Rob.c,268 :: 		delay_ms(100);
$019E	$3082			MOVLW	130
$019F	$00FB			MOVWF	STACK_11
$01A0	$30FF			MOVLW	255
$01A1	$00FA			MOVWF	STACK_10
$01A2	$0BFB			DECFSZ	STACK_11, F
$01A3	$29A5			GOTO	$+2
$01A4	$29A8			GOTO	$+4
$01A5	$0BFA			DECFSZ	STACK_10, F
$01A6	$29A5			GOTO	$-1
$01A7	$29A2			GOTO	$-5
$01A8	$3087			MOVLW	135
$01A9	$00FA			MOVWF	STACK_10
$01AA	$0BFA			DECFSZ	STACK_10, F
$01AB	$29AA			GOTO	$-1
$01AC	$0000			NOP
;Project_Rob.c,269 :: 		while(Left_Sensor == 1 && Mid_Sensor == 0 && Right_Sensor == 0)
$01AD	$	L_Track_Line_forward_33:
$01AD	$3000			MOVLW	0
$01AE	$1886			BTFSC	PORTB, 1
$01AF	$3001			MOVLW	1
$01B0	$00F1			MOVWF	STACK_1
$01B1	$0871			MOVF	STACK_1, 0
$01B2	$3A01			XORLW	1
$01B3	$1D03			BTFSS	STATUS, Z
$01B4	$29C6			GOTO	L_Track_Line_forward_34
$01B5	$3000			MOVLW	0
$01B6	$1906			BTFSC	PORTB, 2
$01B7	$3001			MOVLW	1
$01B8	$00F1			MOVWF	STACK_1
$01B9	$0871			MOVF	STACK_1, 0
$01BA	$3A00			XORLW	0
$01BB	$1D03			BTFSS	STATUS, Z
$01BC	$29C6			GOTO	L_Track_Line_forward_34
$01BD	$3000			MOVLW	0
$01BE	$1986			BTFSC	PORTB, 3
$01BF	$3001			MOVLW	1
$01C0	$00F1			MOVWF	STACK_1
$01C1	$0871			MOVF	STACK_1, 0
$01C2	$3A00			XORLW	0
$01C3	$1D03			BTFSS	STATUS, Z
$01C4	$29C6			GOTO	L_Track_Line_forward_34
$01C5	$	L335_ex_L_Track_Line_forward_34:
;Project_Rob.c,271 :: 		}
$01C5	$29AD			GOTO	L_Track_Line_forward_33
$01C6	$	L_Track_Line_forward_34:
;Project_Rob.c,272 :: 		}
$01C6	$2AC7			GOTO	L_Track_Line_forward_37
$01C7	$	L_Track_Line_forward_32:
;Project_Rob.c,276 :: 		else if(Left_Sensor == 0 && Mid_Sensor == 0 && Right_Sensor == 1)
$01C7	$3000			MOVLW	0
$01C8	$1886			BTFSC	PORTB, 1
$01C9	$3001			MOVLW	1
$01CA	$00F1			MOVWF	STACK_1
$01CB	$0871			MOVF	STACK_1, 0
$01CC	$3A00			XORLW	0
$01CD	$1D03			BTFSS	STATUS, Z
$01CE	$2A1F			GOTO	L_Track_Line_forward_40
$01CF	$3000			MOVLW	0
$01D0	$1906			BTFSC	PORTB, 2
$01D1	$3001			MOVLW	1
$01D2	$00F1			MOVWF	STACK_1
$01D3	$0871			MOVF	STACK_1, 0
$01D4	$3A00			XORLW	0
$01D5	$1D03			BTFSS	STATUS, Z
$01D6	$2A1F			GOTO	L_Track_Line_forward_40
$01D7	$3000			MOVLW	0
$01D8	$1986			BTFSC	PORTB, 3
$01D9	$3001			MOVLW	1
$01DA	$00F1			MOVWF	STACK_1
$01DB	$0871			MOVF	STACK_1, 0
$01DC	$3A01			XORLW	1
$01DD	$1D03			BTFSS	STATUS, Z
$01DE	$2A1F			GOTO	L_Track_Line_forward_40
$01DF	$	L364_ex_L_Track_Line_forward_40:
;Project_Rob.c,278 :: 		delay_ms(50);
$01DF	$3041			MOVLW	65
$01E0	$00FB			MOVWF	STACK_11
$01E1	$30FF			MOVLW	255
$01E2	$00FA			MOVWF	STACK_10
$01E3	$0BFB			DECFSZ	STACK_11, F
$01E4	$29E6			GOTO	$+2
$01E5	$29E9			GOTO	$+4
$01E6	$0BFA			DECFSZ	STACK_10, F
$01E7	$29E6			GOTO	$-1
$01E8	$29E3			GOTO	$-5
$01E9	$30C3			MOVLW	195
$01EA	$00FA			MOVWF	STACK_10
$01EB	$0BFA			DECFSZ	STACK_10, F
$01EC	$29EB			GOTO	$-1
$01ED	$0000			NOP
;Project_Rob.c,280 :: 		Left_Motor_Nve = 0;
$01EE	$1007			BCF	PORTC, 0
;Project_Rob.c,281 :: 		PWM_C1(100);
$01EF	$3064			MOVLW	100
$01F0	$00A2			MOVWF	FARG_PWM_C1+0
$01F1	$203A			CALL	_PWM_C1
;Project_Rob.c,283 :: 		Right_Motor_Nve = 0;
$01F2	$1187			BCF	PORTC, 3
;Project_Rob.c,284 :: 		PWM_C2(50);
$01F3	$3032			MOVLW	50
$01F4	$00A2			MOVWF	FARG_PWM_C2+0
$01F5	$2064			CALL	_PWM_C2
;Project_Rob.c,286 :: 		delay_ms(100);
$01F6	$3082			MOVLW	130
$01F7	$00FB			MOVWF	STACK_11
$01F8	$30FF			MOVLW	255
$01F9	$00FA			MOVWF	STACK_10
$01FA	$0BFB			DECFSZ	STACK_11, F
$01FB	$29FD			GOTO	$+2
$01FC	$2A00			GOTO	$+4
$01FD	$0BFA			DECFSZ	STACK_10, F
$01FE	$29FD			GOTO	$-1
$01FF	$29FA			GOTO	$-5
$0200	$3087			MOVLW	135
$0201	$00FA			MOVWF	STACK_10
$0202	$0BFA			DECFSZ	STACK_10, F
$0203	$2A02			GOTO	$-1
$0204	$0000			NOP
;Project_Rob.c,287 :: 		while(Left_Sensor == 0 && Mid_Sensor == 0 && Right_Sensor == 1)
$0205	$	L_Track_Line_forward_41:
$0205	$3000			MOVLW	0
$0206	$1886			BTFSC	PORTB, 1
$0207	$3001			MOVLW	1
$0208	$00F1			MOVWF	STACK_1
$0209	$0871			MOVF	STACK_1, 0
$020A	$3A00			XORLW	0
$020B	$1D03			BTFSS	STATUS, Z
$020C	$2A1E			GOTO	L_Track_Line_forward_42
$020D	$3000			MOVLW	0
$020E	$1906			BTFSC	PORTB, 2
$020F	$3001			MOVLW	1
$0210	$00F1			MOVWF	STACK_1
$0211	$0871			MOVF	STACK_1, 0
$0212	$3A00			XORLW	0
$0213	$1D03			BTFSS	STATUS, Z
$0214	$2A1E			GOTO	L_Track_Line_forward_42
$0215	$3000			MOVLW	0
$0216	$1986			BTFSC	PORTB, 3
$0217	$3001			MOVLW	1
$0218	$00F1			MOVWF	STACK_1
$0219	$0871			MOVF	STACK_1, 0
$021A	$3A01			XORLW	1
$021B	$1D03			BTFSS	STATUS, Z
$021C	$2A1E			GOTO	L_Track_Line_forward_42
$021D	$	L426_ex_L_Track_Line_forward_42:
;Project_Rob.c,289 :: 		}
$021D	$2A05			GOTO	L_Track_Line_forward_41
$021E	$	L_Track_Line_forward_42:
;Project_Rob.c,290 :: 		}
$021E	$2AC7			GOTO	L_Track_Line_forward_45
$021F	$	L_Track_Line_forward_40:
;Project_Rob.c,294 :: 		else if(Left_Sensor == 1 && Mid_Sensor == 1 && Right_Sensor == 1)
$021F	$3000			MOVLW	0
$0220	$1886			BTFSC	PORTB, 1
$0221	$3001			MOVLW	1
$0222	$00F1			MOVWF	STACK_1
$0223	$0871			MOVF	STACK_1, 0
$0224	$3A01			XORLW	1
$0225	$1D03			BTFSS	STATUS, Z
$0226	$2AC7			GOTO	L_Track_Line_forward_48
$0227	$3000			MOVLW	0
$0228	$1906			BTFSC	PORTB, 2
$0229	$3001			MOVLW	1
$022A	$00F1			MOVWF	STACK_1
$022B	$0871			MOVF	STACK_1, 0
$022C	$3A01			XORLW	1
$022D	$1D03			BTFSS	STATUS, Z
$022E	$2AC7			GOTO	L_Track_Line_forward_48
$022F	$3000			MOVLW	0
$0230	$1986			BTFSC	PORTB, 3
$0231	$3001			MOVLW	1
$0232	$00F1			MOVWF	STACK_1
$0233	$0871			MOVF	STACK_1, 0
$0234	$3A01			XORLW	1
$0235	$1D03			BTFSS	STATUS, Z
$0236	$2AC7			GOTO	L_Track_Line_forward_48
$0237	$	L455_ex_L_Track_Line_forward_48:
;Project_Rob.c,296 :: 		delay_ms(200);
$0237	$3002			MOVLW	2
$0238	$00FC			MOVWF	STACK_12
$0239	$30FF			MOVLW	255
$023A	$00FB			MOVWF	STACK_11
$023B	$30FF			MOVLW	255
$023C	$00FA			MOVWF	STACK_10
$023D	$0BFC			DECFSZ	STACK_12, F
$023E	$2A40			GOTO	$+2
$023F	$2A47			GOTO	$+8
$0240	$0BFB			DECFSZ	STACK_11, F
$0241	$2A43			GOTO	$+2
$0242	$2A46			GOTO	$+4
$0243	$0BFA			DECFSZ	STACK_10, F
$0244	$2A43			GOTO	$-1
$0245	$2A40			GOTO	$-5
$0246	$2A3D			GOTO	$-9
$0247	$3006			MOVLW	6
$0248	$00FB			MOVWF	STACK_11
$0249	$30FF			MOVLW	255
$024A	$00FA			MOVWF	STACK_10
$024B	$0BFB			DECFSZ	STACK_11, F
$024C	$2A4E			GOTO	$+2
$024D	$2A51			GOTO	$+4
$024E	$0BFA			DECFSZ	STACK_10, F
$024F	$2A4E			GOTO	$-1
$0250	$2A4B			GOTO	$-5
$0251	$300A			MOVLW	10
$0252	$00FA			MOVWF	STACK_10
$0253	$0BFA			DECFSZ	STACK_10, F
$0254	$2A53			GOTO	$-1
;Project_Rob.c,298 :: 		if(Left_Sensor == 1 && Mid_Sensor == 1 && Right_Sensor == 1)
$0255	$3000			MOVLW	0
$0256	$1886			BTFSC	PORTB, 1
$0257	$3001			MOVLW	1
$0258	$00F1			MOVWF	STACK_1
$0259	$0871			MOVF	STACK_1, 0
$025A	$3A01			XORLW	1
$025B	$1D03			BTFSS	STATUS, Z
$025C	$2AC7			GOTO	L_Track_Line_forward_51
$025D	$3000			MOVLW	0
$025E	$1906			BTFSC	PORTB, 2
$025F	$3001			MOVLW	1
$0260	$00F1			MOVWF	STACK_1
$0261	$0871			MOVF	STACK_1, 0
$0262	$3A01			XORLW	1
$0263	$1D03			BTFSS	STATUS, Z
$0264	$2AC7			GOTO	L_Track_Line_forward_51
$0265	$3000			MOVLW	0
$0266	$1986			BTFSC	PORTB, 3
$0267	$3001			MOVLW	1
$0268	$00F1			MOVWF	STACK_1
$0269	$0871			MOVF	STACK_1, 0
$026A	$3A01			XORLW	1
$026B	$1D03			BTFSS	STATUS, Z
$026C	$2AC7			GOTO	L_Track_Line_forward_51
$026D	$	L510_ex_L_Track_Line_forward_51:
;Project_Rob.c,301 :: 		r_Lines++;
$026D	$0AA1			INCF	Track_Line_forward_r_Lines_L0, 1
;Project_Rob.c,302 :: 		if(r_Lines == Lines)
$026E	$0821			MOVF	Track_Line_forward_r_Lines_L0, 0
$026F	$0620			XORWF	FARG_Track_Line_forward+0, 0
$0270	$1D03			BTFSS	STATUS, Z
$0271	$2AA8			GOTO	L_Track_Line_forward_52
;Project_Rob.c,304 :: 		Reset_PWM();
$0272	$2025			CALL	_Reset_PWM
;Project_Rob.c,305 :: 		delay_ms(50);
$0273	$3041			MOVLW	65
$0274	$00FB			MOVWF	STACK_11
$0275	$30FF			MOVLW	255
$0276	$00FA			MOVWF	STACK_10
$0277	$0BFB			DECFSZ	STACK_11, F
$0278	$2A7A			GOTO	$+2
$0279	$2A7D			GOTO	$+4
$027A	$0BFA			DECFSZ	STACK_10, F
$027B	$2A7A			GOTO	$-1
$027C	$2A77			GOTO	$-5
$027D	$30C3			MOVLW	195
$027E	$00FA			MOVWF	STACK_10
$027F	$0BFA			DECFSZ	STACK_10, F
$0280	$2A7F			GOTO	$-1
$0281	$0000			NOP
;Project_Rob.c,306 :: 		Left_Motor_Pve = 1;
$0282	$1283			BCF	STATUS, RP0
$0283	$1487			BSF	PORTC, 1
;Project_Rob.c,307 :: 		Left_Motor_Nve = 1;
$0284	$1407			BSF	PORTC, 0
;Project_Rob.c,308 :: 		Right_Motor_Pve = 1;
$0285	$1507			BSF	PORTC, 2
;Project_Rob.c,309 :: 		Right_Motor_Nve = 1;
$0286	$1587			BSF	PORTC, 3
;Project_Rob.c,310 :: 		delay_ms(5000);
$0287	$301A			MOVLW	26
$0288	$00FC			MOVWF	STACK_12
$0289	$30FF			MOVLW	255
$028A	$00FB			MOVWF	STACK_11
$028B	$30FF			MOVLW	255
$028C	$00FA			MOVWF	STACK_10
$028D	$0BFC			DECFSZ	STACK_12, F
$028E	$2A90			GOTO	$+2
$028F	$2A97			GOTO	$+8
$0290	$0BFB			DECFSZ	STACK_11, F
$0291	$2A93			GOTO	$+2
$0292	$2A96			GOTO	$+4
$0293	$0BFA			DECFSZ	STACK_10, F
$0294	$2A93			GOTO	$-1
$0295	$2A90			GOTO	$-5
$0296	$2A8D			GOTO	$-9
$0297	$307F			MOVLW	127
$0298	$00FB			MOVWF	STACK_11
$0299	$30FF			MOVLW	255
$029A	$00FA			MOVWF	STACK_10
$029B	$0BFB			DECFSZ	STACK_11, F
$029C	$2A9E			GOTO	$+2
$029D	$2AA1			GOTO	$+4
$029E	$0BFA			DECFSZ	STACK_10, F
$029F	$2A9E			GOTO	$-1
$02A0	$2A9B			GOTO	$-5
$02A1	$3058			MOVLW	88
$02A2	$00FA			MOVWF	STACK_10
$02A3	$0BFA			DECFSZ	STACK_10, F
$02A4	$2AA3			GOTO	$-1
$02A5	$0000			NOP
$02A6	$0000			NOP
;Project_Rob.c,312 :: 		return;
$02A7	$0008			RETURN
;Project_Rob.c,313 :: 		}
$02A8	$	L_Track_Line_forward_52:
;Project_Rob.c,317 :: 		delay_ms(500);
$02A8	$3003			MOVLW	3
$02A9	$00FC			MOVWF	STACK_12
$02AA	$30FF			MOVLW	255
$02AB	$00FB			MOVWF	STACK_11
$02AC	$30FF			MOVLW	255
$02AD	$00FA			MOVWF	STACK_10
$02AE	$0BFC			DECFSZ	STACK_12, F
$02AF	$2AB1			GOTO	$+2
$02B0	$2AB8			GOTO	$+8
$02B1	$0BFB			DECFSZ	STACK_11, F
$02B2	$2AB4			GOTO	$+2
$02B3	$2AB7			GOTO	$+4
$02B4	$0BFA			DECFSZ	STACK_10, F
$02B5	$2AB4			GOTO	$-1
$02B6	$2AB1			GOTO	$-5
$02B7	$2AAE			GOTO	$-9
$02B8	$308C			MOVLW	140
$02B9	$00FB			MOVWF	STACK_11
$02BA	$30FF			MOVLW	255
$02BB	$00FA			MOVWF	STACK_10
$02BC	$0BFB			DECFSZ	STACK_11, F
$02BD	$2ABF			GOTO	$+2
$02BE	$2AC2			GOTO	$+4
$02BF	$0BFA			DECFSZ	STACK_10, F
$02C0	$2ABF			GOTO	$-1
$02C1	$2ABC			GOTO	$-5
$02C2	$30A1			MOVLW	161
$02C3	$00FA			MOVWF	STACK_10
$02C4	$0BFA			DECFSZ	STACK_10, F
$02C5	$2AC4			GOTO	$-1
$02C6	$0000			NOP
;Project_Rob.c,318 :: 		}
$02C7	$	L_Track_Line_forward_53:
;Project_Rob.c,319 :: 		}
$02C7	$	L_Track_Line_forward_51:
;Project_Rob.c,320 :: 		}
$02C7	$	L_Track_Line_forward_48:
$02C7	$	L_Track_Line_forward_45:
$02C7	$	L_Track_Line_forward_37:
$02C7	$	L_Track_Line_forward_29:
$02C7	$	L_Track_Line_forward_25:
;Project_Rob.c,321 :: 		}
$02C7	$28DA			GOTO	L_Track_Line_forward_16
$02C8	$	L_Track_Line_forward_17:
;Project_Rob.c,322 :: 		}
$02C8	$0008			RETURN
$02C9	$	_Lifter_upward:
;Project_Rob.c,388 :: 		void Lifter_upward()
;Project_Rob.c,393 :: 		while(1)
$02C9	$	L_Lifter_upward_58:
;Project_Rob.c,396 :: 		if(upper_sensor == 0)
$02C9	$3000			MOVLW	0
$02CA	$1303			BCF	STATUS, RP1
$02CB	$1283			BCF	STATUS, RP0
$02CC	$1B06			BTFSC	PORTB, 6
$02CD	$3001			MOVLW	1
$02CE	$00F1			MOVWF	STACK_1
$02CF	$0871			MOVF	STACK_1, 0
$02D0	$3A00			XORLW	0
$02D1	$1D03			BTFSS	STATUS, Z
$02D2	$2B1C			GOTO	L_Lifter_upward_60
;Project_Rob.c,398 :: 		delay_ms(50);
$02D3	$3041			MOVLW	65
$02D4	$00FB			MOVWF	STACK_11
$02D5	$30FF			MOVLW	255
$02D6	$00FA			MOVWF	STACK_10
$02D7	$0BFB			DECFSZ	STACK_11, F
$02D8	$2ADA			GOTO	$+2
$02D9	$2ADD			GOTO	$+4
$02DA	$0BFA			DECFSZ	STACK_10, F
$02DB	$2ADA			GOTO	$-1
$02DC	$2AD7			GOTO	$-5
$02DD	$30C3			MOVLW	195
$02DE	$00FA			MOVWF	STACK_10
$02DF	$0BFA			DECFSZ	STACK_10, F
$02E0	$2ADF			GOTO	$-1
$02E1	$0000			NOP
;Project_Rob.c,400 :: 		Lifter_Nve = 0;
$02E2	$1287			BCF	PORTC, 5
;Project_Rob.c,401 :: 		Lifter_Pve = 1;
$02E3	$1607			BSF	PORTC, 4
;Project_Rob.c,402 :: 		delay_ms(100);
$02E4	$3082			MOVLW	130
$02E5	$00FB			MOVWF	STACK_11
$02E6	$30FF			MOVLW	255
$02E7	$00FA			MOVWF	STACK_10
$02E8	$0BFB			DECFSZ	STACK_11, F
$02E9	$2AEB			GOTO	$+2
$02EA	$2AEE			GOTO	$+4
$02EB	$0BFA			DECFSZ	STACK_10, F
$02EC	$2AEB			GOTO	$-1
$02ED	$2AE8			GOTO	$-5
$02EE	$3087			MOVLW	135
$02EF	$00FA			MOVWF	STACK_10
$02F0	$0BFA			DECFSZ	STACK_10, F
$02F1	$2AF0			GOTO	$-1
$02F2	$0000			NOP
;Project_Rob.c,404 :: 		while(upper_sensor == 0)
$02F3	$	L_Lifter_upward_61:
$02F3	$3000			MOVLW	0
$02F4	$1B06			BTFSC	PORTB, 6
$02F5	$3001			MOVLW	1
$02F6	$00F1			MOVWF	STACK_1
$02F7	$0871			MOVF	STACK_1, 0
$02F8	$3A00			XORLW	0
$02F9	$1903			BTFSC	STATUS, Z
$02FA	$2AF3			GOTO	L_Lifter_upward_61
;Project_Rob.c,406 :: 		}
$02FB	$	L_Lifter_upward_62:
;Project_Rob.c,409 :: 		delay_ms(50);
$02FB	$3041			MOVLW	65
$02FC	$00FB			MOVWF	STACK_11
$02FD	$30FF			MOVLW	255
$02FE	$00FA			MOVWF	STACK_10
$02FF	$0BFB			DECFSZ	STACK_11, F
$0300	$2B02			GOTO	$+2
$0301	$2B05			GOTO	$+4
$0302	$0BFA			DECFSZ	STACK_10, F
$0303	$2B02			GOTO	$-1
$0304	$2AFF			GOTO	$-5
$0305	$30C3			MOVLW	195
$0306	$00FA			MOVWF	STACK_10
$0307	$0BFA			DECFSZ	STACK_10, F
$0308	$2B07			GOTO	$-1
$0309	$0000			NOP
;Project_Rob.c,410 :: 		Lifter_Nve = 1;
$030A	$1687			BSF	PORTC, 5
;Project_Rob.c,411 :: 		Lifter_Pve = 1;
$030B	$1607			BSF	PORTC, 4
;Project_Rob.c,412 :: 		delay_ms(100);
$030C	$3082			MOVLW	130
$030D	$00FB			MOVWF	STACK_11
$030E	$30FF			MOVLW	255
$030F	$00FA			MOVWF	STACK_10
$0310	$0BFB			DECFSZ	STACK_11, F
$0311	$2B13			GOTO	$+2
$0312	$2B16			GOTO	$+4
$0313	$0BFA			DECFSZ	STACK_10, F
$0314	$2B13			GOTO	$-1
$0315	$2B10			GOTO	$-5
$0316	$3087			MOVLW	135
$0317	$00FA			MOVWF	STACK_10
$0318	$0BFA			DECFSZ	STACK_10, F
$0319	$2B18			GOTO	$-1
$031A	$0000			NOP
;Project_Rob.c,413 :: 		}
$031B	$2B3C			GOTO	L_Lifter_upward_63
$031C	$	L_Lifter_upward_60:
;Project_Rob.c,417 :: 		delay_ms(50);
$031C	$3041			MOVLW	65
$031D	$00FB			MOVWF	STACK_11
$031E	$30FF			MOVLW	255
$031F	$00FA			MOVWF	STACK_10
$0320	$0BFB			DECFSZ	STACK_11, F
$0321	$2B23			GOTO	$+2
$0322	$2B26			GOTO	$+4
$0323	$0BFA			DECFSZ	STACK_10, F
$0324	$2B23			GOTO	$-1
$0325	$2B20			GOTO	$-5
$0326	$30C3			MOVLW	195
$0327	$00FA			MOVWF	STACK_10
$0328	$0BFA			DECFSZ	STACK_10, F
$0329	$2B28			GOTO	$-1
$032A	$0000			NOP
;Project_Rob.c,419 :: 		Lifter_Nve = 1;
$032B	$1687			BSF	PORTC, 5
;Project_Rob.c,420 :: 		Lifter_Pve = 1;
$032C	$1607			BSF	PORTC, 4
;Project_Rob.c,421 :: 		delay_ms(100);
$032D	$3082			MOVLW	130
$032E	$00FB			MOVWF	STACK_11
$032F	$30FF			MOVLW	255
$0330	$00FA			MOVWF	STACK_10
$0331	$0BFB			DECFSZ	STACK_11, F
$0332	$2B34			GOTO	$+2
$0333	$2B37			GOTO	$+4
$0334	$0BFA			DECFSZ	STACK_10, F
$0335	$2B34			GOTO	$-1
$0336	$2B31			GOTO	$-5
$0337	$3087			MOVLW	135
$0338	$00FA			MOVWF	STACK_10
$0339	$0BFA			DECFSZ	STACK_10, F
$033A	$2B39			GOTO	$-1
$033B	$0000			NOP
;Project_Rob.c,422 :: 		}
$033C	$	L_Lifter_upward_63:
;Project_Rob.c,423 :: 		}
$033C	$2AC9			GOTO	L_Lifter_upward_58
;Project_Rob.c,424 :: 		}
$033D	$0008			RETURN
$033E	$	_Rotate_Right:
;Project_Rob.c,324 :: 		void Rotate_Right()
;Project_Rob.c,330 :: 		Init_PWM();
$033E	$2004			CALL	_Init_PWM
;Project_Rob.c,331 :: 		PWM_C1(75);
$033F	$304B			MOVLW	75
$0340	$1283			BCF	STATUS, RP0
$0341	$00A2			MOVWF	FARG_PWM_C1+0
$0342	$203A			CALL	_PWM_C1
;Project_Rob.c,332 :: 		Left_Motor_Nve = 0;
$0343	$1007			BCF	PORTC, 0
;Project_Rob.c,333 :: 		PWM_C2(25);
$0344	$3019			MOVLW	25
$0345	$00A2			MOVWF	FARG_PWM_C2+0
$0346	$2064			CALL	_PWM_C2
;Project_Rob.c,334 :: 		Right_Motor_Nve = 1;
$0347	$1587			BSF	PORTC, 3
;Project_Rob.c,337 :: 		delay_ms(1000);
$0348	$3006			MOVLW	6
$0349	$00FC			MOVWF	STACK_12
$034A	$30FF			MOVLW	255
$034B	$00FB			MOVWF	STACK_11
$034C	$30FF			MOVLW	255
$034D	$00FA			MOVWF	STACK_10
$034E	$0BFC			DECFSZ	STACK_12, F
$034F	$2B51			GOTO	$+2
$0350	$2B58			GOTO	$+8
$0351	$0BFB			DECFSZ	STACK_11, F
$0352	$2B54			GOTO	$+2
$0353	$2B57			GOTO	$+4
$0354	$0BFA			DECFSZ	STACK_10, F
$0355	$2B54			GOTO	$-1
$0356	$2B51			GOTO	$-5
$0357	$2B4E			GOTO	$-9
$0358	$301A			MOVLW	26
$0359	$00FB			MOVWF	STACK_11
$035A	$30FF			MOVLW	255
$035B	$00FA			MOVWF	STACK_10
$035C	$0BFB			DECFSZ	STACK_11, F
$035D	$2B5F			GOTO	$+2
$035E	$2B62			GOTO	$+4
$035F	$0BFA			DECFSZ	STACK_10, F
$0360	$2B5F			GOTO	$-1
$0361	$2B5C			GOTO	$-5
$0362	$3042			MOVLW	66
$0363	$00FA			MOVWF	STACK_10
$0364	$0BFA			DECFSZ	STACK_10, F
$0365	$2B64			GOTO	$-1
;Project_Rob.c,341 :: 		while(Mid_Sensor == 0)
$0366	$	L_Rotate_Right_54:
$0366	$3000			MOVLW	0
$0367	$1906			BTFSC	PORTB, 2
$0368	$3001			MOVLW	1
$0369	$00F1			MOVWF	STACK_1
$036A	$0871			MOVF	STACK_1, 0
$036B	$3A00			XORLW	0
$036C	$1903			BTFSC	STATUS, Z
$036D	$2B66			GOTO	L_Rotate_Right_54
;Project_Rob.c,343 :: 		}
$036E	$	L_Rotate_Right_55:
;Project_Rob.c,346 :: 		Reset_PWM();
$036E	$2025			CALL	_Reset_PWM
;Project_Rob.c,347 :: 		delay_ms(50);
$036F	$3041			MOVLW	65
$0370	$00FB			MOVWF	STACK_11
$0371	$30FF			MOVLW	255
$0372	$00FA			MOVWF	STACK_10
$0373	$0BFB			DECFSZ	STACK_11, F
$0374	$2B76			GOTO	$+2
$0375	$2B79			GOTO	$+4
$0376	$0BFA			DECFSZ	STACK_10, F
$0377	$2B76			GOTO	$-1
$0378	$2B73			GOTO	$-5
$0379	$30C3			MOVLW	195
$037A	$00FA			MOVWF	STACK_10
$037B	$0BFA			DECFSZ	STACK_10, F
$037C	$2B7B			GOTO	$-1
$037D	$0000			NOP
;Project_Rob.c,348 :: 		Left_Motor_Pve = 1;
$037E	$1283			BCF	STATUS, RP0
$037F	$1487			BSF	PORTC, 1
;Project_Rob.c,349 :: 		Left_Motor_Nve = 1;
$0380	$1407			BSF	PORTC, 0
;Project_Rob.c,350 :: 		Right_Motor_Pve = 1;
$0381	$1507			BSF	PORTC, 2
;Project_Rob.c,351 :: 		Right_Motor_Nve = 1;
$0382	$1587			BSF	PORTC, 3
;Project_Rob.c,352 :: 		delay_ms(5000);
$0383	$301A			MOVLW	26
$0384	$00FC			MOVWF	STACK_12
$0385	$30FF			MOVLW	255
$0386	$00FB			MOVWF	STACK_11
$0387	$30FF			MOVLW	255
$0388	$00FA			MOVWF	STACK_10
$0389	$0BFC			DECFSZ	STACK_12, F
$038A	$2B8C			GOTO	$+2
$038B	$2B93			GOTO	$+8
$038C	$0BFB			DECFSZ	STACK_11, F
$038D	$2B8F			GOTO	$+2
$038E	$2B92			GOTO	$+4
$038F	$0BFA			DECFSZ	STACK_10, F
$0390	$2B8F			GOTO	$-1
$0391	$2B8C			GOTO	$-5
$0392	$2B89			GOTO	$-9
$0393	$307F			MOVLW	127
$0394	$00FB			MOVWF	STACK_11
$0395	$30FF			MOVLW	255
$0396	$00FA			MOVWF	STACK_10
$0397	$0BFB			DECFSZ	STACK_11, F
$0398	$2B9A			GOTO	$+2
$0399	$2B9D			GOTO	$+4
$039A	$0BFA			DECFSZ	STACK_10, F
$039B	$2B9A			GOTO	$-1
$039C	$2B97			GOTO	$-5
$039D	$3058			MOVLW	88
$039E	$00FA			MOVWF	STACK_10
$039F	$0BFA			DECFSZ	STACK_10, F
$03A0	$2B9F			GOTO	$-1
$03A1	$0000			NOP
$03A2	$0000			NOP
;Project_Rob.c,353 :: 		}
$03A3	$0008			RETURN
$03A4	$	_Lifter_downward:
;Project_Rob.c,426 :: 		void Lifter_downward()
;Project_Rob.c,431 :: 		while(1)
$03A4	$	L_Lifter_downward_64:
;Project_Rob.c,434 :: 		if(lower_sensor == 0)
$03A4	$3000			MOVLW	0
$03A5	$1303			BCF	STATUS, RP1
$03A6	$1283			BCF	STATUS, RP0
$03A7	$1B86			BTFSC	PORTB, 7
$03A8	$3001			MOVLW	1
$03A9	$00F1			MOVWF	STACK_1
$03AA	$0871			MOVF	STACK_1, 0
$03AB	$3A00			XORLW	0
$03AC	$1D03			BTFSS	STATUS, Z
$03AD	$2BF7			GOTO	L_Lifter_downward_66
;Project_Rob.c,436 :: 		delay_ms(50);
$03AE	$3041			MOVLW	65
$03AF	$00FB			MOVWF	STACK_11
$03B0	$30FF			MOVLW	255
$03B1	$00FA			MOVWF	STACK_10
$03B2	$0BFB			DECFSZ	STACK_11, F
$03B3	$2BB5			GOTO	$+2
$03B4	$2BB8			GOTO	$+4
$03B5	$0BFA			DECFSZ	STACK_10, F
$03B6	$2BB5			GOTO	$-1
$03B7	$2BB2			GOTO	$-5
$03B8	$30C3			MOVLW	195
$03B9	$00FA			MOVWF	STACK_10
$03BA	$0BFA			DECFSZ	STACK_10, F
$03BB	$2BBA			GOTO	$-1
$03BC	$0000			NOP
;Project_Rob.c,438 :: 		Lifter_Nve = 1;
$03BD	$1687			BSF	PORTC, 5
;Project_Rob.c,439 :: 		Lifter_Pve = 0;
$03BE	$1207			BCF	PORTC, 4
;Project_Rob.c,440 :: 		delay_ms(100);
$03BF	$3082			MOVLW	130
$03C0	$00FB			MOVWF	STACK_11
$03C1	$30FF			MOVLW	255
$03C2	$00FA			MOVWF	STACK_10
$03C3	$0BFB			DECFSZ	STACK_11, F
$03C4	$2BC6			GOTO	$+2
$03C5	$2BC9			GOTO	$+4
$03C6	$0BFA			DECFSZ	STACK_10, F
$03C7	$2BC6			GOTO	$-1
$03C8	$2BC3			GOTO	$-5
$03C9	$3087			MOVLW	135
$03CA	$00FA			MOVWF	STACK_10
$03CB	$0BFA			DECFSZ	STACK_10, F
$03CC	$2BCB			GOTO	$-1
$03CD	$0000			NOP
;Project_Rob.c,442 :: 		while(lower_sensor == 0)
$03CE	$	L_Lifter_downward_67:
$03CE	$3000			MOVLW	0
$03CF	$1B86			BTFSC	PORTB, 7
$03D0	$3001			MOVLW	1
$03D1	$00F1			MOVWF	STACK_1
$03D2	$0871			MOVF	STACK_1, 0
$03D3	$3A00			XORLW	0
$03D4	$1903			BTFSC	STATUS, Z
$03D5	$2BCE			GOTO	L_Lifter_downward_67
;Project_Rob.c,444 :: 		}
$03D6	$	L_Lifter_downward_68:
;Project_Rob.c,447 :: 		delay_ms(50);
$03D6	$3041			MOVLW	65
$03D7	$00FB			MOVWF	STACK_11
$03D8	$30FF			MOVLW	255
$03D9	$00FA			MOVWF	STACK_10
$03DA	$0BFB			DECFSZ	STACK_11, F
$03DB	$2BDD			GOTO	$+2
$03DC	$2BE0			GOTO	$+4
$03DD	$0BFA			DECFSZ	STACK_10, F
$03DE	$2BDD			GOTO	$-1
$03DF	$2BDA			GOTO	$-5
$03E0	$30C3			MOVLW	195
$03E1	$00FA			MOVWF	STACK_10
$03E2	$0BFA			DECFSZ	STACK_10, F
$03E3	$2BE2			GOTO	$-1
$03E4	$0000			NOP
;Project_Rob.c,448 :: 		Lifter_Nve = 1;
$03E5	$1687			BSF	PORTC, 5
;Project_Rob.c,449 :: 		Lifter_Pve = 1;
$03E6	$1607			BSF	PORTC, 4
;Project_Rob.c,450 :: 		delay_ms(100);
$03E7	$3082			MOVLW	130
$03E8	$00FB			MOVWF	STACK_11
$03E9	$30FF			MOVLW	255
$03EA	$00FA			MOVWF	STACK_10
$03EB	$0BFB			DECFSZ	STACK_11, F
$03EC	$2BEE			GOTO	$+2
$03ED	$2BF1			GOTO	$+4
$03EE	$0BFA			DECFSZ	STACK_10, F
$03EF	$2BEE			GOTO	$-1
$03F0	$2BEB			GOTO	$-5
$03F1	$3087			MOVLW	135
$03F2	$00FA			MOVWF	STACK_10
$03F3	$0BFA			DECFSZ	STACK_10, F
$03F4	$2BF3			GOTO	$-1
$03F5	$0000			NOP
;Project_Rob.c,451 :: 		}
$03F6	$2C17			GOTO	L_Lifter_downward_69
$03F7	$	L_Lifter_downward_66:
;Project_Rob.c,455 :: 		delay_ms(50);
$03F7	$3041			MOVLW	65
$03F8	$00FB			MOVWF	STACK_11
$03F9	$30FF			MOVLW	255
$03FA	$00FA			MOVWF	STACK_10
$03FB	$0BFB			DECFSZ	STACK_11, F
$03FC	$2BFE			GOTO	$+2
$03FD	$2C01			GOTO	$+4
$03FE	$0BFA			DECFSZ	STACK_10, F
$03FF	$2BFE			GOTO	$-1
$0400	$2BFB			GOTO	$-5
$0401	$30C3			MOVLW	195
$0402	$00FA			MOVWF	STACK_10
$0403	$0BFA			DECFSZ	STACK_10, F
$0404	$2C03			GOTO	$-1
$0405	$0000			NOP
;Project_Rob.c,457 :: 		Lifter_Nve = 1;
$0406	$1687			BSF	PORTC, 5
;Project_Rob.c,458 :: 		Lifter_Pve = 1;
$0407	$1607			BSF	PORTC, 4
;Project_Rob.c,459 :: 		delay_ms(100);
$0408	$3082			MOVLW	130
$0409	$00FB			MOVWF	STACK_11
$040A	$30FF			MOVLW	255
$040B	$00FA			MOVWF	STACK_10
$040C	$0BFB			DECFSZ	STACK_11, F
$040D	$2C0F			GOTO	$+2
$040E	$2C12			GOTO	$+4
$040F	$0BFA			DECFSZ	STACK_10, F
$0410	$2C0F			GOTO	$-1
$0411	$2C0C			GOTO	$-5
$0412	$3087			MOVLW	135
$0413	$00FA			MOVWF	STACK_10
$0414	$0BFA			DECFSZ	STACK_10, F
$0415	$2C14			GOTO	$-1
$0416	$0000			NOP
;Project_Rob.c,460 :: 		}
$0417	$	L_Lifter_downward_69:
;Project_Rob.c,461 :: 		}
$0417	$2BA4			GOTO	L_Lifter_downward_64
;Project_Rob.c,462 :: 		}
$0418	$0008			RETURN
$0419	$	_main:
;Project_Rob.c,566 :: 		void main()
;Project_Rob.c,568 :: 		Init_Main();
$0419	$208E			CALL	_Init_Main
;Project_Rob.c,570 :: 		while(1)
$041A	$	L_main_82:
;Project_Rob.c,572 :: 		Track_Line_forward(4);
$041A	$3004			MOVLW	4
$041B	$1283			BCF	STATUS, RP0
$041C	$00A0			MOVWF	FARG_Track_Line_forward+0
$041D	$20D7			CALL	_Track_Line_forward
;Project_Rob.c,573 :: 		Lifter_upward();
$041E	$22C9			CALL	_Lifter_upward
;Project_Rob.c,574 :: 		Rotate_Right();
$041F	$233E			CALL	_Rotate_Right
;Project_Rob.c,575 :: 		Track_Line_forward(3);
$0420	$3003			MOVLW	3
$0421	$1303			BCF	STATUS, RP1
$0422	$1283			BCF	STATUS, RP0
$0423	$00A0			MOVWF	FARG_Track_Line_forward+0
$0424	$20D7			CALL	_Track_Line_forward
;Project_Rob.c,576 :: 		Lifter_downward();
$0425	$23A4			CALL	_Lifter_downward
;Project_Rob.c,577 :: 		}
$0426	$2C1A			GOTO	L_main_82
;Project_Rob.c,578 :: 		}
$0427	$2C27			GOTO	$
